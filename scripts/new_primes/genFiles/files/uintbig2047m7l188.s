/* DO NOT EDIT! generated by ./autogen */

.intel_syntax noprefix

#include "uintbig_namespace.h"

.section .rodata

.global secsidh_internal_2047m7l188_uintbig_1
secsidh_internal_2047m7l188_uintbig_1:
    .quad 1, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0

.global secsidh_internal_2047m7l188_uintbig_1_ctidh
secsidh_internal_2047m7l188_uintbig_1_ctidh:
    .quad 1, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0

.global secsidh_internal_2047m7l188_uintbig_p
secsidh_internal_2047m7l188_uintbig_p:
    .quad 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff
    .quad 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0x3c173804e2d37dc4
    .quad 0xbca49a3c56f448ce, 0x5255950d36d12381, 0x4649a7488c72865f, 0x62fd8426facf70b1
    .quad 0x4421796b55c2bcd7, 0xb528eb44fff382c0, 0xc5c19aa4d4ff82bf, 0x7cdf7c2e3be01ba0
    .quad 0x85660a506d12b7e8, 0x2efc8f14529603c6, 0xebb69dd28327ff2e, 0x49258145021b72e5
    .quad 0x0e392de27353fdbc, 0xe18461f3d0f2f55f, 0x975ac76e1323771c, 0x05c5155670578a59
    .quad 0xabe99780ad722192, 0x631fea0a4625edef, 0xb636713eb861ff9c, 0x1f7ed4e7803c4a38
    .quad 0x531c6e902093e78a, 0xa6a54865414179bf, 0x9430cf92314be40b, 0x6c7a07f46ff6d662

.global secsidh_internal_2047m7l188_uintbig_four_sqrt_p
secsidh_internal_2047m7l188_uintbig_four_sqrt_p:
    .quad 0x2591a5d11e581fe8, 0xe601dc3cb984f449, 0xe9f3651338c0ae84, 0xb1233fc1e0a66ae4
    .quad 0x12b261896716e6a6, 0xc8d387540b36caf4, 0xbcaf79f080bcb244, 0x524b728af0dac2fb
    .quad 0x118d027d8059e616, 0xb1af2455151c2c36, 0x21060b835f5fbd63, 0xe80def8dcfa3f379
    .quad 0x0a87a873e352dabb, 0xa22b358f29eef50d, 0x6c3e1abf9ad7000f, 0x9a92ddfc5b4f19a9
    .quad 2, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0
    .quad 0, 0, 0, 0

.section .text

.global secsidh_internal_2047m7l188_uintbig_set
secsidh_internal_2047m7l188_uintbig_set:
    cld
    mov rax, rsi
    stosq
    xor rax, rax
    mov rcx, 31
    rep stosq
    ret


.global secsidh_internal_2047m7l188_uintbig_bit
secsidh_internal_2047m7l188_uintbig_bit:
    mov rcx, rsi
    and rcx, 0x3f
    shr rsi, 6
    mov rax, [rdi + 8*rsi]
    shr rax, cl
    and rax, 1
    ret


.global secsidh_internal_2047m7l188_uintbig_add
secsidh_internal_2047m7l188_uintbig_add:
    mov rax, [rsi +  0]
    add rax, [rdx +  0]
    mov [rdi +  0], rax
    .set k, 1
    .rept 31
        mov rax, [rsi + 8*k]
        adc rax, [rdx + 8*k]
        mov [rdi + 8*k], rax
        .set k, k+1
    .endr
    setc al
    movzx rax, al
    ret

.global secsidh_internal_2047m7l188_uintbig_sub
secsidh_internal_2047m7l188_uintbig_sub:
    mov rax, [rsi +  0]
    sub rax, [rdx +  0]
    mov [rdi +  0], rax
    .set k, 1
    .rept 31
        mov rax, [rsi + 8*k]
        sbb rax, [rdx + 8*k]
        mov [rdi + 8*k], rax
        .set k, k+1
    .endr
    setc al
    movzx rax, al
    ret


.global secsidh_internal_2047m7l188_uintbig_mul3_64
secsidh_internal_2047m7l188_uintbig_mul3_64:

    mulx r10, rax, [rsi +  0]
    mov [rdi +  0], rax

    mulx r11, rax, [rsi + 8]
    add  rax, r10
    mov [rdi + 8], rax

    mulx r10, rax, [rsi + 16]
    adcx rax, r11
    mov [rdi + 16], rax

    mulx r11, rax, [rsi + 24]
    adcx rax, r10
    mov [rdi + 24], rax

    mulx r10, rax, [rsi + 32]
    adcx rax, r11
    mov [rdi + 32], rax

    mulx r11, rax, [rsi + 40]
    adcx rax, r10
    mov [rdi + 40], rax

    mulx r10, rax, [rsi + 48]
    adcx rax, r11
    mov [rdi + 48], rax

    mulx r11, rax, [rsi + 56]
    adcx rax, r10
    mov [rdi + 56], rax

    mulx r10, rax, [rsi + 64]
    adcx rax, r11
    mov [rdi + 64], rax

    mulx r11, rax, [rsi + 72]
    adcx rax, r10
    mov [rdi + 72], rax

    mulx r10, rax, [rsi + 80]
    adcx rax, r11
    mov [rdi + 80], rax

    mulx r11, rax, [rsi + 88]
    adcx rax, r10
    mov [rdi + 88], rax

    mulx r10, rax, [rsi + 96]
    adcx rax, r11
    mov [rdi + 96], rax

    mulx r11, rax, [rsi + 104]
    adcx rax, r10
    mov [rdi + 104], rax

    mulx r10, rax, [rsi + 112]
    adcx rax, r11
    mov [rdi + 112], rax

    mulx r11, rax, [rsi + 120]
    adcx rax, r10
    mov [rdi + 120], rax

    mulx r10, rax, [rsi + 128]
    adcx rax, r11
    mov [rdi + 128], rax

    mulx r11, rax, [rsi + 136]
    adcx rax, r10
    mov [rdi + 136], rax

    mulx r10, rax, [rsi + 144]
    adcx rax, r11
    mov [rdi + 144], rax

    mulx r11, rax, [rsi + 152]
    adcx rax, r10
    mov [rdi + 152], rax

    mulx r10, rax, [rsi + 160]
    adcx rax, r11
    mov [rdi + 160], rax

    mulx r11, rax, [rsi + 168]
    adcx rax, r10
    mov [rdi + 168], rax

    mulx r10, rax, [rsi + 176]
    adcx rax, r11
    mov [rdi + 176], rax

    mulx r11, rax, [rsi + 184]
    adcx rax, r10
    mov [rdi + 184], rax

    mulx r10, rax, [rsi + 192]
    adcx rax, r11
    mov [rdi + 192], rax

    mulx r11, rax, [rsi + 200]
    adcx rax, r10
    mov [rdi + 200], rax

    mulx r10, rax, [rsi + 208]
    adcx rax, r11
    mov [rdi + 208], rax

    mulx r11, rax, [rsi + 216]
    adcx rax, r10
    mov [rdi + 216], rax

    mulx r10, rax, [rsi + 224]
    adcx rax, r11
    mov [rdi + 224], rax

    mulx r11, rax, [rsi + 232]
    adcx rax, r10
    mov [rdi + 232], rax

    mulx r10, rax, [rsi + 240]
    adcx rax, r11
    mov [rdi + 240], rax

    mulx r11, rax, [rsi + 248]
    adcx rax, r10
    mov [rdi + 248], rax

    ret
